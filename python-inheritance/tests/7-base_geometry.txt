>>> import importlib
>>> toTest = importlib.import_module('7-base_geometry')


>>> bg = toTest.BaseGeometry()
>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 45)

>>> bg.integer_validator("width", "word")
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", -10)
Traceback (most recent call last):
ValueError: width must be greater than 0

>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
ValueError: width must be greater than 0

>>> bg.integer_validator("width", (4,))
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", [3])
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", True)
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", {3,4})
Traceback (most recent call last):
TypeError: width must be an integer


>>> bg.integer_validator("width", None)
Traceback (most recent call last):
TypeError: width must be an integer


>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


>>> bg.integer_validator("width")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'
